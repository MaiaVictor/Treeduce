(define (O pred)   (vector 'O pred))
(define (I pred)   (vector 'I pred))
(define E          (vector 'E))

(define (Inc bits)
  (case (vector-ref bits 0)
    ('E E)
    ('O (I (vector-ref bits 1)))
    ('I (O (Inc (vector-ref bits 1))))
  )
)

(define (Rev x r)
  (case (vector-ref x 0)
    ('E r)
    ('O (Rev (vector-ref x 1) (O r)))
    ('I (Rev (vector-ref x 1) (I r)))
  )
)

(define (Fn0 x)
  (case (vector-ref x 0)
    ('E (Fn1 (Inc E) E E))
    ('O (Fn1 (Inc (O (vector-ref x 1))) E E))
    ('I (Fn1 (Inc (I (vector-ref x 1))) E E))
  )
)

(define (Fn1 x y z)
  (case (vector-ref x 0)
    ('E (Fn2 y z))
    ('O (Fn1 (vector-ref x 1) (O y) (O z)))
    ('I (Fn1 (vector-ref x 1) (I y) (I z)))
  )
)
(define (Fn2 x y)
  (case (vector-ref x 0)
    ('E y)
    ('O (Fn0 (Rev y E)))
    ('I (Fn2 (vector-ref x 1) y))
  )
)

(display (Fn0 (O (O (O (O (O (O (O (O (O (O (O (O (O (O (O (O (O (O (O (O (O (O (O (O E))))))))))))))))))))))))))

(display "\n")
